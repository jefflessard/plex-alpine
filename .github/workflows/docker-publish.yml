name: Docker
 
on:
  workflow_dispatch:
    inputs:
      TAGS:
        required: true
#  push:
#    branches:
#      - 'main'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout plex-alpine
        uses: actions/checkout@v3
        with:
          path: plex-alpine
      - run: |
          ./plex-alpine/get-docker-info.sh ${{ inputs.TAGS }} >> $GITHUB_ENV
      - name: Checkout original linuxserver/docker-plex
        uses: actions/checkout@v3
        with:
          repository: linuxserver/docker-plex
          #ref: master
          ref: ${{ env.VERSION }}
          path: docker-plex
      - run: |
          cd docker-plex
          git apply ../plex-alpine/Dockerfile.patch
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./docker-plex
          build-args:
            BUILD_DATE=${{ env.BUILD_DATE }}
            VERSION=${{ env.VERSION }}
            PLEX_RELEASE=${{ env.PLEX_RELEASE }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ inputs.TAGS }}
            ghcr.io/${{ github.repository }}:latest
            ${{ github.repository }}:${{ inputs.TAGS }}
            ${{ github.repository }}:latest
      -
        name: Trigger Build of autotier version
        env:
          GH_TOKEN: ${{ secrets.AUTOTIER_PAT }}
        run: |
          gh --repo "${{ github.repository }}-autotier" workflow run Docker -f VERSION='${{ inputs.TAGS }}'
